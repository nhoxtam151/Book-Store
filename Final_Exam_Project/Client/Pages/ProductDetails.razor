@page "/product/{id}"
@using Final_Exam_Project.Client.Services.ProductService;
@using Final_Exam_Project.Shared;
@inject IProductServiceClient ProductService;

<!-- Media object -->
<div class="d-flex col-6 align-items-center ms-md-5">
    <!-- Image -->
    <div class="media-img-big-wrapper me-lg-5">
        <img src="@product.Image"
             alt="John Doe"
             class="media-img-big mr-2" />
    </div>
    <!-- Body -->
    <div class="m-lg-2">
        <h2 class="mb-6 fw-bolder">@product.Title</h2>
        <p class="text-wrap">
            @product.Description
        </p>
        @if (product.Variants != null && product.Variants.Count > 0)
        {
            <div class="form-group mb-4">
                <select class="form-control" @bind="currentColorId">
                    @foreach (var variant in product.Variants)
                    {
                        <option value="@variant.ColorId">@variant.Color.Name</option>
                    }
                </select>
            </div>
        }

        @if (GetSelectedVariant() != null)
        {
            <div class="d-flex">
                <h6 class=" text-decoration-line-through price">$@GetSelectedVariant().OriginalPrice</h6>

                <h5 class="text-danger ms-lg-2">@String.Format("{0:0.00}",DiscountPercent())%</h5>
            </div>

            <h4 class="price">$@GetSelectedVariant().Price</h4>
            <button class="btn btn-primary"><i class="oi oi-cart"></i>&nbsp;&nbsp;&nbsp; Add to Cart</button>
 
        }
    </div>
</div>
<!-- Media object -->
    @code {
        [Parameter]
        public string Id { get; set; }
        private Product product = null;
        private int currentColorId = 1;
        

        protected override async Task OnInitializedAsync()
        {
            product = await ProductService.GetProductById(Int32.Parse(Id));

            if (product.Variants.Count > 0)
            {
                currentColorId = product.Variants[0].ColorId;
            }
        }


        private ProductVariant GetSelectedVariant()
        {
            var variant = product.Variants.FirstOrDefault(v => v.ColorId == currentColorId);
            return variant;
        }

        public decimal DiscountPercent()
        {
        if (GetSelectedVariant().Price <= 0 || GetSelectedVariant().OriginalPrice <= 0)
            {
                return 0;
            }
        return ((GetSelectedVariant().Price / GetSelectedVariant().OriginalPrice) * 100) - 100;


        }
}
